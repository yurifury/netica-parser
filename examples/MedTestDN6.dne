// ~->[DNET-1]->~

// File created by someone at MonashU using Netica 2.17 on Feb 09, 2006 at 01:03:46.

bnet MedTestDN6 {
autoupdate = TRUE;
whenchanged = 1050471922;

visual V1 {
	defdispform = BELIEFBARS;
	nodelabeling = TITLE;
	NodeMaxNumEntries = 50;
	nodefont = font {shape= "Arial"; size= 10;};
	linkfont = font {shape= "Arial"; size= 9;};
	windowposn = (45, 61, 574, 388);
	resolution = 72;
	drawingbounds = (1080, 720);
	showpagebreaks = FALSE;
	usegrid = TRUE;
	gridspace = (6, 6);
	PrinterSetting A {
		margins = (1270, 1270, 1270, 1270);
		landscape = FALSE;
		magnify = 1;
		};
	};

node Disease {
	kind = NATURE;
	discrete = TRUE;
	states = (True, False);
	parents = ();
	probs = 
		// True         False        
		  (0.05,        0.95);
	whenchanged = 1050463781;
	visual V1 {
		center = (270, 114);
		height = 4;
		};
	};

node Test {
	kind = DECISION;
	discrete = TRUE;
	chance = DETERMIN;
	states = (YES, NO);
	parents = ();
	functable = 
		   NO;
	whenchanged = 1050471922;
	visual V1 {
		center = (90, 138);
		height = 6;
		};
	};

node Finding {
	kind = NATURE;
	discrete = TRUE;
	states = (Neg, Pos);
	parents = (Disease, Test);
	probs = 
		// Neg          Pos             // Disease Test 
		(((0.01,        0.99),          // True    YES  
		  (0.01,        0.99)),         // True    NO   
		 ((0.95,        0.05),          // False   YES  
		  (0.95,        0.05)));        // False   NO   ;
	whenchanged = 1050471922;
	visual V1 {
		center = (288, 234);
		height = 1;
		};
	};

node Treatment {
	kind = DECISION;
	discrete = TRUE;
	states = (True, False);
	parents = (Test, Finding);
	functable = 
		                     // Test Finding 
		 ((False,            // YES  Neg     
		   True),            // YES  Pos     
		  (False,            // NO   Neg     
		   True));           // NO   Pos     ;
	whenchanged = 1050467838;
	visual V1 {
		center = (426, 48);
		height = 2;
		};
	};

node U {
	kind = UTILITY;
	discrete = FALSE;
	measure = RATIO;
	parents = (Treatment, Disease);
	functable = 
		                  // Treatment Disease 
		 ((-50,           // True      True    
		   -30),          // True      False   
		  (-200,          // False     True    
		   0));           // False     False   ;
	whenchanged = 1050463837;
	visual V1 {
		center = (426, 114);
		height = 3;
		};
	};

node V {
	kind = UTILITY;
	discrete = FALSE;
	measure = RATIO;
	parents = (Test);
	functable = 
		                 // Test 
		  (-15,          // YES  
		   0);           // NO   ;
	whenchanged = 1050466656;
	visual V1 {
		center = (90, 222);
		height = 5;
		};
	};
ElimOrder = (Disease, Treatment, Finding, Test);
};
